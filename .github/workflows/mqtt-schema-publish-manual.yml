name: MQTT Schema Manual Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (must match package.json)'
        required: true
      mirrorOnly:
        description: 'Skip npm publish and only mirror to GitHub Packages (true/false)'
        required: false
        default: 'false'

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read version
        id: pkg
        run: |
          VERSION=$(jq -r .version package.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Validate input version
        run: |
          if [ "${{ github.event.inputs.version }}" != "${{ steps.pkg.outputs.version }}" ]; then
            echo "Input version does not match package.json (input=${{ github.event.inputs.version }}, pkg=${{ steps.pkg.outputs.version }})" >&2
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install & Build
        run: |
          npm ci
          npm run build

      - name: Verify schemas & changelog
        run: |
          npm run verify:schemas
          npm run verify:release

      - name: Publish (provenance)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ "${{ github.event.inputs.mirrorOnly }}" = "true" ]; then
            echo "mirrorOnly=true -> skipping npm publish";
          elif npm view @alteriom/mqtt-schema@${{ steps.pkg.outputs.version }} > /dev/null 2>&1; then
            echo "Version already exists on npm -> skipping npm publish";
          else
            npm publish --provenance --access public;
          fi

      - name: Mirror publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "@alteriom:registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" >> .npmrc
          echo "always-auth=true" >> .npmrc
          if npm view @alteriom/mqtt-schema@${{ steps.pkg.outputs.version }} --registry=https://npm.pkg.github.com > /dev/null 2>&1; then
            echo "Already exists on GitHub Packages. Skipping mirror publish.";
          else
            npm publish --registry=https://npm.pkg.github.com --ignore-scripts;
            echo "Mirror publish to GitHub Packages complete.";
          fi

      - name: Summary
        run: |
          echo "Published version: ${{ steps.pkg.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "Manual provenance publish successful" >> $GITHUB_STEP_SUMMARY
          echo "GitHub Packages mirror attempted (conditional)" >> $GITHUB_STEP_SUMMARY
          echo "Schema / CHANGELOG verification executed" >> $GITHUB_STEP_SUMMARY
