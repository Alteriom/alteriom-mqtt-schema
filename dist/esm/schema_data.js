// AUTO-GENERATED by copy-schemas.cjs. Do not edit manually.
/* eslint-disable */
export const envelope_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/envelope.schema.json",
    "title": "Alteriom MQTT Base Envelope v1",
    "type": "object",
    "required": [
        "schema_version",
        "device_id",
        "device_type",
        "timestamp",
        "firmware_version"
    ],
    "properties": {
        "schema_version": {
            "type": "integer",
            "const": 1
        },
        "message_type": {
            "type": "integer",
            "description": "Optional message type code for fast classification (v0.7.2)",
            "enum": [
                200,
                201,
                202,
                203,
                204,
                300,
                301,
                302,
                303,
                304,
                400,
                401,
                402,
                500,
                600,
                601,
                602,
                603,
                604,
                605,
                700
            ]
        },
        "device_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z0-9_-]+$"
        },
        "device_type": {
            "type": "string",
            "enum": [
                "sensor",
                "gateway"
            ]
        },
        "timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "firmware_version": {
            "type": "string",
            "minLength": 1,
            "maxLength": 40
        },
        "hardware_version": {
            "type": "string",
            "maxLength": 80
        },
        "location": {
            "type": "object",
            "description": "Standardized location information for geospatial tracking",
            "properties": {
                "latitude": {
                    "type": "number",
                    "minimum": -90,
                    "maximum": 90
                },
                "longitude": {
                    "type": "number",
                    "minimum": -180,
                    "maximum": 180
                },
                "altitude": {
                    "type": "number",
                    "description": "Altitude in meters"
                },
                "accuracy_m": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Position accuracy in meters"
                },
                "zone": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "Logical zone identifier (e.g., warehouse_A, floor_2)"
                },
                "description": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "Human-readable location description"
                }
            },
            "additionalProperties": true
        },
        "environment": {
            "type": "object",
            "description": "Environmental and deployment context metadata",
            "properties": {
                "deployment_type": {
                    "type": "string",
                    "enum": [
                        "indoor",
                        "outdoor",
                        "mobile",
                        "mixed"
                    ],
                    "description": "Type of deployment environment"
                },
                "power_source": {
                    "type": "string",
                    "enum": [
                        "battery",
                        "mains",
                        "solar",
                        "mixed",
                        "other"
                    ],
                    "description": "Primary power source"
                },
                "expected_battery_life_days": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Expected battery life in days (if battery-powered)"
                }
            },
            "additionalProperties": true
        }
    },
    "additionalProperties": true
};
export const sensor_data_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/sensor_data.schema.json",
    "title": "Sensor Data Message v1",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        }
    ],
    "type": "object",
    "required": [
        "sensors"
    ],
    "properties": {
        "sensors": {
            "type": "object",
            "minProperties": 1,
            "additionalProperties": {
                "type": "object",
                "required": [
                    "value"
                ],
                "properties": {
                    "value": {
                        "type": [
                            "number",
                            "integer"
                        ]
                    },
                    "unit": {
                        "type": "string"
                    },
                    "raw_value": {
                        "type": [
                            "number",
                            "integer"
                        ]
                    },
                    "calibrated_value": {
                        "type": [
                            "number",
                            "integer"
                        ]
                    },
                    "quality_score": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1
                    },
                    "name": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "additional_data": {
                        "type": "object"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Per-sensor reading timestamp (useful for async multi-sensor polling)"
                    },
                    "accuracy": {
                        "type": "number",
                        "minimum": 0,
                        "description": "Sensor accuracy (Â±value in sensor units)"
                    },
                    "last_calibration": {
                        "type": "string",
                        "format": "date",
                        "description": "Last calibration date (ISO 8601 date)"
                    },
                    "error_margin_pct": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 100,
                        "description": "Error margin as percentage"
                    },
                    "operational_range": {
                        "type": "object",
                        "description": "Valid operational range for this sensor",
                        "required": [
                            "min",
                            "max"
                        ],
                        "properties": {
                            "min": {
                                "type": "number"
                            },
                            "max": {
                                "type": "number"
                            }
                        },
                        "additionalProperties": false
                    }
                },
                "additionalProperties": false
            }
        },
        "battery_level": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100
        },
        "signal_strength": {
            "type": "integer",
            "minimum": -200,
            "maximum": 0
        },
        "additional": {
            "type": "object"
        }
    },
    "additionalProperties": true
};
export const sensor_heartbeat_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/sensor_heartbeat.schema.json",
    "title": "Sensor Heartbeat v1",
    "type": "object",
    "required": [
        "schema_version",
        "device_id",
        "device_type",
        "timestamp"
    ],
    "properties": {
        "schema_version": {
            "type": "integer",
            "const": 1
        },
        "device_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[A-Za-z0-9_-]+$"
        },
        "device_type": {
            "type": "string",
            "enum": [
                "sensor",
                "gateway"
            ]
        },
        "timestamp": {
            "type": "string",
            "format": "date-time"
        }
    },
    "additionalProperties": true
};
export const sensor_status_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/sensor_status.schema.json",
    "title": "Sensor Status v1",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        }
    ],
    "type": "object",
    "required": [
        "status"
    ],
    "properties": {
        "status": {
            "type": "string",
            "enum": [
                "online",
                "offline",
                "updating",
                "error"
            ]
        },
        "battery_level": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100
        },
        "signal_strength": {
            "type": "integer",
            "minimum": -200,
            "maximum": 0
        }
    },
    "additionalProperties": true
};
export const sensor_info_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/sensor_info.schema.json",
    "title": "Sensor Info Message",
    "description": "Sensor identification and capabilities message (v0.7.2+). Provides detailed information about sensor hardware, capabilities, and configuration.",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        },
        {
            "type": "object",
            "properties": {
                "device_type": {
                    "const": "sensor",
                    "description": "Must be 'sensor' for sensor info messages"
                },
                "firmware_version": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Required firmware version for sensor info"
                },
                "hardware_version": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Hardware version identifier"
                },
                "mac_address": {
                    "type": "string",
                    "pattern": "^([0-9A-Fa-f]{2}:){5}[0-9A-Fa-f]{2}$",
                    "description": "MAC address in format 00:11:22:33:44:55"
                },
                "chip_id": {
                    "type": "string",
                    "description": "Unique chip/device identifier"
                },
                "manufacturer": {
                    "type": "string",
                    "description": "Sensor manufacturer name"
                },
                "model": {
                    "type": "string",
                    "description": "Sensor model identifier"
                },
                "capabilities": {
                    "type": "object",
                    "description": "Sensor capabilities and features",
                    "properties": {
                        "available_sensors": {
                            "type": "array",
                            "description": "List of available sensor types",
                            "items": {
                                "type": "string",
                                "examples": [
                                    "temperature",
                                    "humidity",
                                    "pressure",
                                    "light",
                                    "motion",
                                    "co2",
                                    "voc",
                                    "pm25"
                                ]
                            }
                        },
                        "supports_mesh": {
                            "type": "boolean",
                            "description": "Whether sensor can participate in mesh network"
                        },
                        "supports_ota": {
                            "type": "boolean",
                            "description": "Whether sensor supports firmware updates"
                        },
                        "power_source": {
                            "type": "string",
                            "enum": [
                                "battery",
                                "mains",
                                "solar",
                                "mixed",
                                "other"
                            ],
                            "description": "Primary power source type"
                        },
                        "battery_type": {
                            "type": "string",
                            "description": "Battery type if battery-powered (e.g., 'CR2032', 'LiPo 3.7V')"
                        },
                        "sampling_rates": {
                            "type": "object",
                            "description": "Min/max sampling intervals supported",
                            "properties": {
                                "min_interval_ms": {
                                    "type": "number",
                                    "minimum": 0
                                },
                                "max_interval_ms": {
                                    "type": "number",
                                    "minimum": 0
                                }
                            },
                            "additionalProperties": true
                        },
                        "communication_protocols": {
                            "type": "array",
                            "description": "Supported communication protocols",
                            "items": {
                                "type": "string",
                                "examples": [
                                    "wifi",
                                    "ble",
                                    "zigbee",
                                    "lora",
                                    "mesh"
                                ]
                            }
                        },
                        "additional_features": {
                            "type": "object",
                            "description": "Additional sensor-specific features",
                            "additionalProperties": true
                        }
                    },
                    "additionalProperties": true
                },
                "calibration_info": {
                    "type": "object",
                    "description": "Sensor calibration information",
                    "properties": {
                        "last_calibration": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last calibration timestamp (ISO 8601)"
                        },
                        "calibration_due": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Next calibration due date (ISO 8601)"
                        },
                        "factory_calibrated": {
                            "type": "boolean",
                            "description": "Whether sensor is factory calibrated"
                        },
                        "calibration_certificate": {
                            "type": "string",
                            "description": "Calibration certificate reference/URL"
                        }
                    },
                    "additionalProperties": true
                },
                "operational_info": {
                    "type": "object",
                    "description": "Operational parameters and limits",
                    "properties": {
                        "operating_temp_range": {
                            "type": "object",
                            "properties": {
                                "min_celsius": {
                                    "type": "number"
                                },
                                "max_celsius": {
                                    "type": "number"
                                }
                            }
                        },
                        "operating_humidity_range": {
                            "type": "object",
                            "properties": {
                                "min_percent": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 100
                                },
                                "max_percent": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 100
                                }
                            }
                        },
                        "ip_rating": {
                            "type": "string",
                            "pattern": "^IP[0-9]{2}$",
                            "description": "IP rating (e.g., 'IP65')"
                        },
                        "warranty_expires": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Warranty expiration date (ISO 8601)"
                        }
                    },
                    "additionalProperties": true
                }
            },
            "required": [
                "device_type",
                "firmware_version"
            ],
            "additionalProperties": true
        }
    ]
};
export const sensor_metrics_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/sensor_metrics.schema.json",
    "title": "Sensor Metrics Message",
    "description": "Sensor health and performance metrics message (v0.7.2+). Reports sensor operational health, battery, signal, uptime, and diagnostic metrics.",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        },
        {
            "type": "object",
            "properties": {
                "device_type": {
                    "const": "sensor",
                    "description": "Must be 'sensor' for sensor metrics messages"
                },
                "firmware_version": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Required firmware version for sensor metrics"
                },
                "metrics": {
                    "type": "object",
                    "description": "Sensor health and performance metrics",
                    "properties": {
                        "uptime_s": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Sensor uptime in seconds since last boot"
                        },
                        "battery_level": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100,
                            "description": "Battery level percentage (0-100)"
                        },
                        "battery_voltage": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Battery voltage in volts"
                        },
                        "battery_current_ma": {
                            "type": "number",
                            "description": "Battery current draw in milliamps"
                        },
                        "battery_health": {
                            "type": "string",
                            "enum": [
                                "good",
                                "fair",
                                "poor",
                                "critical",
                                "charging",
                                "unknown"
                            ],
                            "description": "Battery health status"
                        },
                        "estimated_battery_life_h": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Estimated remaining battery life in hours"
                        },
                        "signal_strength": {
                            "type": "number",
                            "minimum": -200,
                            "maximum": 0,
                            "description": "Signal strength in dBm (-200 to 0)"
                        },
                        "signal_quality": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100,
                            "description": "Signal quality percentage (0-100)"
                        },
                        "rssi": {
                            "type": "number",
                            "minimum": -200,
                            "maximum": 0,
                            "description": "RSSI (Received Signal Strength Indicator) in dBm"
                        },
                        "snr": {
                            "type": "number",
                            "description": "Signal-to-Noise Ratio in dB"
                        },
                        "link_quality": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 255,
                            "description": "Link Quality Indicator (LQI) for mesh/zigbee networks"
                        },
                        "cpu_usage_pct": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100,
                            "description": "CPU usage percentage"
                        },
                        "memory_usage_pct": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100,
                            "description": "Memory usage percentage"
                        },
                        "free_memory_bytes": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Free memory in bytes"
                        },
                        "temperature_c": {
                            "type": "number",
                            "description": "Internal/board temperature in Celsius"
                        },
                        "sampling_rate_hz": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Current sampling rate in Hz"
                        },
                        "samples_collected": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Total samples collected since boot"
                        },
                        "error_count": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Total error count since boot"
                        },
                        "warning_count": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Total warning count since boot"
                        },
                        "transmission_success_rate": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100,
                            "description": "Message transmission success rate percentage"
                        },
                        "last_error": {
                            "type": "string",
                            "maxLength": 256,
                            "description": "Last error message"
                        },
                        "last_error_timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp of last error (ISO 8601)"
                        },
                        "reboot_count": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of reboots since deployment"
                        },
                        "last_reboot_reason": {
                            "type": "string",
                            "enum": [
                                "power_on",
                                "watchdog",
                                "software_reset",
                                "firmware_update",
                                "crash",
                                "user_initiated",
                                "low_battery",
                                "unknown"
                            ],
                            "description": "Reason for last reboot"
                        }
                    },
                    "required": [
                        "uptime_s"
                    ],
                    "additionalProperties": true
                }
            },
            "required": [
                "device_type",
                "firmware_version",
                "metrics"
            ],
            "additionalProperties": true
        }
    ]
};
export const gateway_info_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/gateway_info.schema.json",
    "title": "Gateway Info v1",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        }
    ],
    "type": "object",
    "properties": {
        "mac_address": {
            "type": "string",
            "pattern": "^[0-9A-Fa-f:]{17}$"
        },
        "ip_address": {
            "type": "string",
            "format": "ipv4"
        },
        "capabilities": {
            "type": "object",
            "properties": {
                "max_nodes": {
                    "type": "integer",
                    "minimum": 0
                },
                "supports_mesh": {
                    "type": "boolean"
                },
                "firmware_update": {
                    "type": "boolean"
                }
            },
            "additionalProperties": true
        }
    },
    "additionalProperties": true
};
export const gateway_metrics_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/gateway_metrics.schema.json",
    "title": "Gateway Metrics v1",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        }
    ],
    "type": "object",
    "required": [
        "metrics"
    ],
    "properties": {
        "metrics": {
            "type": "object",
            "required": [
                "uptime_s"
            ],
            "properties": {
                "uptime_s": {
                    "type": "integer",
                    "minimum": 0
                },
                "cpu_usage_pct": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                },
                "memory_usage_pct": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                },
                "temperature_c": {
                    "type": "number"
                },
                "connected_devices": {
                    "type": "integer",
                    "minimum": 0
                },
                "mesh_nodes": {
                    "type": "integer",
                    "minimum": 0
                },
                "packet_loss_pct": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                },
                "data_throughput_kbps": {
                    "type": "number",
                    "minimum": 0
                },
                "storage_usage_pct": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "description": "Disk/flash storage usage percentage"
                },
                "storage_total_mb": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Total storage capacity in megabytes"
                },
                "storage_free_mb": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Free storage space in megabytes"
                },
                "network_rx_kbps": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Network receive bandwidth in kilobits per second"
                },
                "network_tx_kbps": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Network transmit bandwidth in kilobits per second"
                },
                "active_connections": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Number of active network connections"
                },
                "error_count_24h": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Error count in last 24 hours"
                },
                "warning_count_24h": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Warning count in last 24 hours"
                },
                "restart_count": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Total restart counter since deployment"
                },
                "last_restart_reason": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Reason for last restart (e.g., watchdog, power_loss, update, manual)"
                }
            },
            "additionalProperties": true
        }
    },
    "additionalProperties": true
};
export const gateway_data_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/gateway_data.schema.json",
    "title": "Gateway Data Message",
    "description": "Gateway telemetry data message (v0.7.2+). Similar to sensor_data but for gateway-originated sensor readings (environmental sensors on gateway device).",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        },
        {
            "type": "object",
            "properties": {
                "device_type": {
                    "const": "gateway",
                    "description": "Must be 'gateway' for gateway data messages"
                },
                "firmware_version": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Required firmware version for gateway data"
                },
                "sensors": {
                    "type": "object",
                    "description": "Sensor readings from gateway's onboard sensors",
                    "patternProperties": {
                        "^[a-z0-9_]+$": {
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "number",
                                    "description": "Sensor reading value (required)"
                                },
                                "unit": {
                                    "type": "string",
                                    "description": "Unit of measurement (e.g., 'celsius', 'percent', 'ppm')"
                                },
                                "raw_value": {
                                    "type": "number",
                                    "description": "Raw ADC or uncalibrated value"
                                },
                                "calibrated_value": {
                                    "type": "number",
                                    "description": "Calibrated sensor value"
                                },
                                "quality_score": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 1,
                                    "description": "Data quality score (0-1, 1 = best)"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Human-readable sensor name"
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Physical location of sensor on gateway"
                                },
                                "timestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Per-sensor reading timestamp (ISO 8601)"
                                },
                                "accuracy": {
                                    "type": "number",
                                    "description": "Sensor accuracy (Â±value in units)"
                                },
                                "last_calibration": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Last calibration date (ISO 8601)"
                                },
                                "error_margin_pct": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 100,
                                    "description": "Error margin percentage (0-100)"
                                },
                                "operational_range": {
                                    "type": "object",
                                    "properties": {
                                        "min": {
                                            "type": "number"
                                        },
                                        "max": {
                                            "type": "number"
                                        }
                                    },
                                    "description": "Operational range limits"
                                },
                                "additional_data": {
                                    "type": "object",
                                    "description": "Additional sensor-specific metadata",
                                    "additionalProperties": true
                                }
                            },
                            "required": [
                                "value"
                            ],
                            "additionalProperties": true
                        }
                    },
                    "minProperties": 1,
                    "additionalProperties": false
                },
                "signal_strength": {
                    "type": "number",
                    "minimum": -200,
                    "maximum": 0,
                    "description": "WiFi/network signal strength in dBm"
                },
                "additional": {
                    "type": "object",
                    "description": "Additional gateway-specific data",
                    "additionalProperties": true
                }
            },
            "required": [
                "device_type",
                "firmware_version",
                "sensors"
            ],
            "additionalProperties": true
        }
    ]
};
export const gateway_heartbeat_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/gateway_heartbeat.schema.json",
    "title": "Gateway Heartbeat Message",
    "description": "Gateway presence and health check message (v0.7.2+). Minimal message to indicate gateway is alive and responsive.",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        },
        {
            "type": "object",
            "properties": {
                "device_type": {
                    "const": "gateway",
                    "description": "Must be 'gateway' for gateway heartbeat messages"
                },
                "firmware_version": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Firmware version (optional, can be omitted if unchanged since last message)"
                },
                "uptime_s": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Gateway uptime in seconds since last boot"
                },
                "connected_devices": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Number of connected devices"
                },
                "mesh_nodes": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Number of mesh nodes in network"
                },
                "status_summary": {
                    "type": "string",
                    "enum": [
                        "healthy",
                        "degraded",
                        "critical",
                        "maintenance"
                    ],
                    "description": "Overall gateway health status"
                }
            },
            "required": [
                "device_type"
            ],
            "additionalProperties": true
        }
    ]
};
export const gateway_status_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/gateway_status.schema.json",
    "title": "Gateway Status Message",
    "description": "Gateway status change notification (v0.7.2+). Reports gateway operational state changes.",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        },
        {
            "type": "object",
            "properties": {
                "device_type": {
                    "const": "gateway",
                    "description": "Must be 'gateway' for gateway status messages"
                },
                "firmware_version": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Required firmware version for gateway status"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "online",
                        "offline",
                        "starting",
                        "stopping",
                        "updating",
                        "maintenance",
                        "error",
                        "degraded"
                    ],
                    "description": "Current gateway operational status"
                },
                "previous_status": {
                    "type": "string",
                    "enum": [
                        "online",
                        "offline",
                        "starting",
                        "stopping",
                        "updating",
                        "maintenance",
                        "error",
                        "degraded"
                    ],
                    "description": "Previous status before this change"
                },
                "status_reason": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "Human-readable reason for status change"
                },
                "error_code": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "Machine-readable error code if status is 'error'"
                },
                "uptime_s": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Gateway uptime in seconds"
                },
                "connected_devices": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Number of connected devices"
                },
                "signal_strength": {
                    "type": "number",
                    "minimum": -200,
                    "maximum": 0,
                    "description": "Network signal strength in dBm"
                },
                "recovery_action": {
                    "type": "string",
                    "enum": [
                        "none",
                        "restart_pending",
                        "restarting",
                        "user_intervention_required",
                        "automatic_recovery"
                    ],
                    "description": "Planned or ongoing recovery action"
                },
                "estimated_recovery_time_s": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Estimated time to recovery in seconds"
                }
            },
            "required": [
                "device_type",
                "firmware_version",
                "status"
            ],
            "additionalProperties": true
        }
    ]
};
export const firmware_status_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/firmware_status.schema.json",
    "title": "Firmware Update Status v1 (Enhanced v0.7.2)",
    "description": "Enhanced OTA firmware update status with command support, scheduling, and improved validation",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        }
    ],
    "type": "object",
    "required": [
        "status"
    ],
    "properties": {
        "event": {
            "type": "string",
            "description": "Event type (e.g., 'ota_command', 'ota_status', 'ota_schedule')"
        },
        "from_version": {
            "type": "string",
            "description": "Current firmware version before update"
        },
        "to_version": {
            "type": "string",
            "description": "Target firmware version after update"
        },
        "status": {
            "type": "string",
            "enum": [
                "idle",
                "pending",
                "scheduled",
                "downloading",
                "download_paused",
                "flashing",
                "verifying",
                "rebooting",
                "completed",
                "failed",
                "cancelled",
                "rolled_back",
                "rollback_pending",
                "rollback_failed"
            ],
            "description": "Current OTA update status"
        },
        "progress_pct": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Update progress percentage (0-100)"
        },
        "error": {
            "type": [
                "string",
                "null"
            ],
            "description": "Human-readable error message"
        },
        "error_code": {
            "type": "string",
            "maxLength": 64,
            "description": "Machine-readable error code for diagnostics"
        },
        "retry_count": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of retry attempts for this update"
        },
        "max_retries": {
            "type": "integer",
            "minimum": 0,
            "description": "Maximum allowed retry attempts"
        },
        "download_speed_kbps": {
            "type": "number",
            "minimum": 0,
            "description": "Current download speed in kilobits per second"
        },
        "bytes_downloaded": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of bytes downloaded so far"
        },
        "bytes_total": {
            "type": "integer",
            "minimum": 0,
            "description": "Total bytes to download"
        },
        "eta_seconds": {
            "type": "integer",
            "minimum": 0,
            "description": "Estimated time remaining in seconds"
        },
        "update_started_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO8601 timestamp when update began"
        },
        "update_completed_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO8601 timestamp when update completed or failed"
        },
        "scheduled_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO8601 timestamp when update is scheduled to start"
        },
        "deadline": {
            "type": "string",
            "format": "date-time",
            "description": "ISO8601 timestamp deadline for update completion"
        },
        "rollback_available": {
            "type": "boolean",
            "description": "Whether rollback to previous version is available"
        },
        "previous_version": {
            "type": "string",
            "description": "Version to rollback to if update fails"
        },
        "update_type": {
            "type": "string",
            "enum": [
                "full",
                "delta",
                "patch",
                "configuration"
            ],
            "description": "Type of update being applied"
        },
        "update_channel": {
            "type": "string",
            "enum": [
                "stable",
                "beta",
                "dev",
                "custom"
            ],
            "description": "Update channel/track"
        },
        "update_priority": {
            "type": "string",
            "enum": [
                "low",
                "normal",
                "high",
                "critical"
            ],
            "description": "Update priority level"
        },
        "signature_verified": {
            "type": "boolean",
            "description": "Whether firmware signature was successfully verified"
        },
        "checksum_verified": {
            "type": "boolean",
            "description": "Whether firmware checksum was successfully verified"
        },
        "checksum_algorithm": {
            "type": "string",
            "enum": [
                "md5",
                "sha1",
                "sha256",
                "sha512"
            ],
            "description": "Checksum algorithm used"
        },
        "expected_checksum": {
            "type": "string",
            "description": "Expected checksum value"
        },
        "actual_checksum": {
            "type": "string",
            "description": "Actual calculated checksum value"
        },
        "free_space_kb": {
            "type": "integer",
            "minimum": 0,
            "description": "Available storage space in kilobytes before update"
        },
        "required_space_kb": {
            "type": "integer",
            "minimum": 0,
            "description": "Required storage space for update in kilobytes"
        },
        "battery_level_pct": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Battery level during update (critical for battery-powered devices)"
        },
        "min_battery_required_pct": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Minimum battery level required to proceed with update"
        },
        "force_update": {
            "type": "boolean",
            "description": "Whether this is a mandatory forced update"
        },
        "allow_downgrade": {
            "type": "boolean",
            "description": "Whether downgrading to older version is allowed"
        },
        "auto_reboot": {
            "type": "boolean",
            "description": "Whether device will automatically reboot after update"
        },
        "backup_config": {
            "type": "boolean",
            "description": "Whether device configuration was backed up before update"
        },
        "update_source": {
            "type": "string",
            "description": "Source/URL of firmware update"
        },
        "update_manifest_url": {
            "type": "string",
            "format": "uri",
            "description": "URL to OTA manifest file"
        },
        "correlation_id": {
            "type": "string",
            "maxLength": 128,
            "description": "Correlation ID linking command to status updates"
        },
        "phase": {
            "type": "string",
            "enum": [
                "preparation",
                "download",
                "validation",
                "installation",
                "verification",
                "finalization",
                "cleanup"
            ],
            "description": "Current update phase"
        },
        "cancellable": {
            "type": "boolean",
            "description": "Whether update can be cancelled at this stage"
        },
        "pause_reason": {
            "type": "string",
            "description": "Reason for download pause (if download_paused)"
        },
        "validation_errors": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "List of validation errors if verification failed"
        }
    },
    "additionalProperties": true
};
export const control_response_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/control_response.schema.json",
    "title": "Control / Command Response v1",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        }
    ],
    "type": "object",
    "required": [
        "status"
    ],
    "properties": {
        "command": {
            "type": "string"
        },
        "status": {
            "type": "string",
            "enum": [
                "ok",
                "error"
            ]
        },
        "message": {
            "type": "string"
        },
        "result": {
            "type": [
                "object",
                "array",
                "string",
                "number",
                "boolean",
                "null"
            ]
        }
    },
    "additionalProperties": true
};
export const command_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/command.schema.json",
    "title": "Device Command v1",
    "description": "Command message sent from MQTT client to IoT device for control operations",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        }
    ],
    "type": "object",
    "required": [
        "event",
        "command"
    ],
    "properties": {
        "event": {
            "type": "string",
            "const": "command",
            "description": "Event type discriminator"
        },
        "command": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-z][a-z0-9_]*$",
            "description": "Command name in snake_case (e.g., read_sensors, set_interval, restart)",
            "examples": [
                "read_sensors",
                "set_interval",
                "enable_sensor",
                "update_config",
                "restart",
                "get_status"
            ]
        },
        "correlation_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "pattern": "^[A-Za-z0-9_-]+$",
            "description": "Unique identifier for tracking command â response lifecycle"
        },
        "parameters": {
            "type": "object",
            "description": "Command-specific parameters (validated by device)",
            "additionalProperties": true,
            "examples": [
                {
                    "interval": 30000
                },
                {
                    "sensor": "temperature",
                    "enabled": true
                },
                {
                    "immediate": true,
                    "sensors": [
                        "temperature",
                        "humidity"
                    ]
                }
            ]
        },
        "timeout_ms": {
            "type": "integer",
            "minimum": 1000,
            "maximum": 300000,
            "default": 5000,
            "description": "Command execution timeout in milliseconds"
        },
        "priority": {
            "type": "string",
            "enum": [
                "low",
                "normal",
                "high",
                "urgent"
            ],
            "default": "normal",
            "description": "Command priority for queue management"
        }
    },
    "additionalProperties": true
};
export const command_response_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/command_response.schema.json",
    "title": "Command Response v1",
    "description": "Response message from IoT device after executing a command",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        }
    ],
    "type": "object",
    "required": [
        "event",
        "success"
    ],
    "properties": {
        "event": {
            "type": "string",
            "const": "command_response",
            "description": "Event type discriminator"
        },
        "command": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "description": "Original command name that was executed"
        },
        "correlation_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "pattern": "^[A-Za-z0-9_-]+$",
            "description": "Matches correlation_id from original command"
        },
        "success": {
            "type": "boolean",
            "description": "Whether command execution succeeded"
        },
        "result": {
            "type": [
                "object",
                "array",
                "string",
                "number",
                "boolean",
                "null"
            ],
            "description": "Command execution result data"
        },
        "message": {
            "type": "string",
            "maxLength": 256,
            "description": "Human-readable status message"
        },
        "error_code": {
            "type": "string",
            "maxLength": 64,
            "description": "Machine-readable error code (e.g., TIMEOUT, INVALID_PARAMS)"
        },
        "latency_ms": {
            "type": "integer",
            "minimum": 0,
            "description": "Time taken to execute command in milliseconds"
        }
    },
    "additionalProperties": true
};
export const mesh_node_list_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/mesh_node_list.schema.json",
    "title": "Mesh Node List v1",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        }
    ],
    "type": "object",
    "required": [
        "nodes"
    ],
    "properties": {
        "nodes": {
            "type": "array",
            "items": {
                "type": "object",
                "required": [
                    "node_id"
                ],
                "properties": {
                    "node_id": {
                        "type": "string",
                        "description": "Unique node identifier"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "online",
                            "offline",
                            "unreachable"
                        ],
                        "description": "Current node status"
                    },
                    "last_seen": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last communication timestamp"
                    },
                    "signal_strength": {
                        "type": "integer",
                        "minimum": -200,
                        "maximum": 0,
                        "description": "Signal strength in dBm"
                    }
                },
                "additionalProperties": true
            }
        },
        "node_count": {
            "type": "integer",
            "minimum": 0,
            "description": "Total number of nodes"
        },
        "mesh_id": {
            "type": "string",
            "description": "Mesh network identifier"
        }
    },
    "additionalProperties": true
};
export const mesh_topology_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/mesh_topology.schema.json",
    "title": "Mesh Network Topology v1",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        }
    ],
    "type": "object",
    "required": [
        "connections"
    ],
    "properties": {
        "connections": {
            "type": "array",
            "items": {
                "type": "object",
                "required": [
                    "from_node",
                    "to_node"
                ],
                "properties": {
                    "from_node": {
                        "type": "string",
                        "description": "Source node ID"
                    },
                    "to_node": {
                        "type": "string",
                        "description": "Destination node ID"
                    },
                    "link_quality": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "Link quality score (0-1)"
                    },
                    "latency_ms": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Link latency in milliseconds"
                    },
                    "hop_count": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Number of hops in path"
                    }
                },
                "additionalProperties": true
            }
        },
        "root_node": {
            "type": "string",
            "description": "Root node ID (gateway/bridge)"
        },
        "total_connections": {
            "type": "integer",
            "minimum": 0,
            "description": "Total number of connections"
        }
    },
    "additionalProperties": true
};
export const mesh_alert_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/mesh_alert.schema.json",
    "title": "Mesh Network Alert v1",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        }
    ],
    "type": "object",
    "required": [
        "alerts"
    ],
    "properties": {
        "alerts": {
            "type": "array",
            "items": {
                "type": "object",
                "required": [
                    "alert_type",
                    "severity",
                    "message"
                ],
                "properties": {
                    "alert_type": {
                        "type": "string",
                        "enum": [
                            "low_memory",
                            "node_offline",
                            "connection_lost",
                            "high_latency",
                            "packet_loss",
                            "firmware_mismatch",
                            "configuration_error",
                            "security_warning",
                            "other"
                        ],
                        "description": "Type of alert"
                    },
                    "severity": {
                        "type": "string",
                        "enum": [
                            "critical",
                            "warning",
                            "info"
                        ],
                        "description": "Alert severity level"
                    },
                    "message": {
                        "type": "string",
                        "description": "Human-readable alert message"
                    },
                    "node_id": {
                        "type": "string",
                        "description": "Related node ID (if applicable)"
                    },
                    "metric_value": {
                        "type": "number",
                        "description": "Related metric value (if applicable)"
                    },
                    "threshold": {
                        "type": "number",
                        "description": "Threshold that triggered alert"
                    },
                    "alert_id": {
                        "type": "string",
                        "description": "Unique alert identifier"
                    }
                },
                "additionalProperties": true
            }
        },
        "alert_count": {
            "type": "integer",
            "minimum": 0,
            "description": "Total number of active alerts"
        }
    },
    "additionalProperties": true
};
export const mesh_bridge_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/mesh_bridge.schema.json",
    "title": "Mesh Protocol Bridge Message",
    "description": "Bridge message for painlessMesh and other mesh protocols",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        },
        {
            "type": "object",
            "required": [
                "event",
                "mesh_protocol",
                "mesh_message"
            ],
            "properties": {
                "device_type": {
                    "const": "gateway",
                    "description": "Must be gateway (only gateways bridge mesh protocols)"
                },
                "event": {
                    "const": "mesh_bridge",
                    "description": "Event identifier for mesh protocol bridge messages"
                },
                "message_type": {
                    "const": 603,
                    "description": "Message type code for mesh bridge (v0.7.1+)"
                },
                "mesh_protocol": {
                    "type": "string",
                    "enum": [
                        "painlessMesh",
                        "esp-now",
                        "ble-mesh",
                        "thread",
                        "zigbee"
                    ],
                    "description": "Mesh protocol being bridged"
                },
                "mesh_message": {
                    "type": "object",
                    "description": "Encapsulated mesh protocol message",
                    "properties": {
                        "from_node_id": {
                            "type": [
                                "integer",
                                "string"
                            ],
                            "description": "Source node identifier (uint32 for painlessMesh)"
                        },
                        "to_node_id": {
                            "type": [
                                "integer",
                                "string"
                            ],
                            "description": "Destination node identifier (0 or 'broadcast' for broadcast)"
                        },
                        "mesh_type": {
                            "type": "integer",
                            "description": "Mesh protocol-specific message type code"
                        },
                        "mesh_type_name": {
                            "type": "string",
                            "description": "Human-readable mesh message type (e.g., 'SINGLE', 'BROADCAST')"
                        },
                        "raw_payload": {
                            "type": "string",
                            "description": "Raw mesh message payload (base64 or hex encoded)"
                        },
                        "payload_decoded": {
                            "type": "object",
                            "description": "Decoded payload if it's a valid MQTT v1 message"
                        },
                        "rssi": {
                            "type": "number",
                            "minimum": -200,
                            "maximum": 0,
                            "description": "Signal strength in dBm"
                        },
                        "hop_count": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of hops from source to gateway"
                        },
                        "mesh_timestamp": {
                            "type": "integer",
                            "description": "Mesh protocol timestamp (microseconds for painlessMesh)"
                        }
                    },
                    "additionalProperties": true
                },
                "gateway_node_id": {
                    "type": [
                        "integer",
                        "string"
                    ],
                    "description": "Gateway's node ID in the mesh network"
                },
                "mesh_network_id": {
                    "type": "string",
                    "description": "Mesh network identifier"
                }
            },
            "additionalProperties": true
        }
    ]
};
export const mesh_status_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/mesh_status.schema.json",
    "title": "Mesh Status Message",
    "description": "Mesh network health and status message (v0.7.2+). Reports overall mesh network operational status and health indicators.",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        },
        {
            "type": "object",
            "properties": {
                "device_type": {
                    "const": "gateway",
                    "description": "Must be 'gateway' for mesh status messages"
                },
                "firmware_version": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Required firmware version for mesh status"
                },
                "mesh_network_id": {
                    "type": "string",
                    "description": "Unique mesh network identifier"
                },
                "mesh_status": {
                    "type": "string",
                    "enum": [
                        "healthy",
                        "degraded",
                        "partitioned",
                        "forming",
                        "failed",
                        "maintenance"
                    ],
                    "description": "Overall mesh network health status"
                },
                "node_count": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Total number of nodes in mesh network"
                },
                "online_nodes": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Number of nodes currently online"
                },
                "offline_nodes": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Number of nodes currently offline"
                },
                "root_node": {
                    "type": "string",
                    "description": "Current root node identifier"
                },
                "network_stability": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "description": "Network stability score (0-100, higher is better)"
                },
                "topology_changes_24h": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Number of topology changes in last 24 hours"
                },
                "partition_count": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Number of network partitions (1 = healthy, >1 = partitioned)"
                },
                "average_hop_count": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Average hop count across all node pairs"
                },
                "max_hop_count": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Maximum hop count in network"
                },
                "network_diameter": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Network diameter (longest shortest path)"
                },
                "issues": {
                    "type": "array",
                    "description": "List of current mesh network issues",
                    "items": {
                        "type": "object",
                        "properties": {
                            "issue_type": {
                                "type": "string",
                                "enum": [
                                    "partition",
                                    "high_latency",
                                    "packet_loss",
                                    "node_unreachable",
                                    "routing_loop",
                                    "congestion",
                                    "security",
                                    "other"
                                ],
                                "description": "Type of network issue"
                            },
                            "severity": {
                                "type": "string",
                                "enum": [
                                    "critical",
                                    "warning",
                                    "info"
                                ],
                                "description": "Issue severity level"
                            },
                            "description": {
                                "type": "string",
                                "maxLength": 256,
                                "description": "Human-readable issue description"
                            },
                            "affected_nodes": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "List of affected node IDs"
                            },
                            "detected_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Issue detection timestamp (ISO 8601)"
                            }
                        },
                        "required": [
                            "issue_type",
                            "severity",
                            "description"
                        ],
                        "additionalProperties": true
                    }
                },
                "last_topology_change": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp of last topology change (ISO 8601)"
                },
                "mesh_protocol": {
                    "type": "string",
                    "enum": [
                        "painlessMesh",
                        "esp-now",
                        "ble-mesh",
                        "thread",
                        "zigbee"
                    ],
                    "description": "Mesh protocol being used"
                }
            },
            "required": [
                "device_type",
                "firmware_version",
                "mesh_status"
            ],
            "additionalProperties": true
        }
    ]
};
export const mesh_metrics_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/mesh_metrics.schema.json",
    "title": "Mesh Metrics Message",
    "description": "Mesh network performance metrics message (v0.7.2+). Detailed performance and traffic metrics for mesh network.",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        },
        {
            "type": "object",
            "properties": {
                "device_type": {
                    "const": "gateway",
                    "description": "Must be 'gateway' for mesh metrics messages"
                },
                "firmware_version": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Required firmware version for mesh metrics"
                },
                "mesh_network_id": {
                    "type": "string",
                    "description": "Unique mesh network identifier"
                },
                "metrics": {
                    "type": "object",
                    "description": "Mesh network performance metrics",
                    "properties": {
                        "uptime_s": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Mesh network uptime in seconds"
                        },
                        "total_nodes": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Total nodes in network"
                        },
                        "active_nodes": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Currently active nodes"
                        },
                        "packets_sent": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Total packets sent"
                        },
                        "packets_received": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Total packets received"
                        },
                        "packets_dropped": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Total packets dropped"
                        },
                        "packet_loss_pct": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100,
                            "description": "Packet loss percentage"
                        },
                        "average_latency_ms": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Average network latency in milliseconds"
                        },
                        "max_latency_ms": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Maximum observed latency in milliseconds"
                        },
                        "min_latency_ms": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Minimum observed latency in milliseconds"
                        },
                        "throughput_kbps": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Network throughput in kbps"
                        },
                        "bandwidth_utilization_pct": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100,
                            "description": "Bandwidth utilization percentage"
                        },
                        "routing_table_size": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Size of routing table"
                        },
                        "route_updates_24h": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Routing table updates in last 24 hours"
                        },
                        "broadcast_messages": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Total broadcast messages sent"
                        },
                        "unicast_messages": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Total unicast messages sent"
                        },
                        "multicast_messages": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Total multicast messages sent"
                        },
                        "retransmission_rate": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100,
                            "description": "Message retransmission rate percentage"
                        },
                        "duplicate_packets": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of duplicate packets detected"
                        },
                        "out_of_order_packets": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of out-of-order packets"
                        },
                        "error_count": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Total error count"
                        },
                        "collision_count": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of packet collisions"
                        },
                        "average_rssi": {
                            "type": "number",
                            "minimum": -200,
                            "maximum": 0,
                            "description": "Average RSSI across all links in dBm"
                        },
                        "weakest_link_rssi": {
                            "type": "number",
                            "minimum": -200,
                            "maximum": 0,
                            "description": "Weakest link RSSI in dBm"
                        },
                        "strongest_link_rssi": {
                            "type": "number",
                            "minimum": -200,
                            "maximum": 0,
                            "description": "Strongest link RSSI in dBm"
                        },
                        "node_join_count_24h": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Nodes joined in last 24 hours"
                        },
                        "node_leave_count_24h": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Nodes left in last 24 hours"
                        },
                        "mesh_healing_events": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of self-healing events"
                        }
                    },
                    "required": [
                        "uptime_s"
                    ],
                    "additionalProperties": true
                },
                "top_talkers": {
                    "type": "array",
                    "description": "Nodes with highest traffic volume",
                    "items": {
                        "type": "object",
                        "properties": {
                            "node_id": {
                                "type": "string"
                            },
                            "packets_sent": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "packets_received": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "bytes_sent": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "bytes_received": {
                                "type": "integer",
                                "minimum": 0
                            }
                        },
                        "additionalProperties": true
                    }
                },
                "problematic_links": {
                    "type": "array",
                    "description": "Links with performance issues",
                    "items": {
                        "type": "object",
                        "properties": {
                            "from_node": {
                                "type": "string"
                            },
                            "to_node": {
                                "type": "string"
                            },
                            "packet_loss_pct": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 100
                            },
                            "latency_ms": {
                                "type": "number",
                                "minimum": 0
                            },
                            "rssi": {
                                "type": "number",
                                "minimum": -200,
                                "maximum": 0
                            },
                            "issue": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": true
                    }
                }
            },
            "required": [
                "device_type",
                "firmware_version",
                "metrics"
            ],
            "additionalProperties": true
        }
    ]
};
export const device_config_schema = {
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.alteriom.io/mqtt/v1/device_config.schema.json",
    "title": "Device Configuration Message",
    "description": "Configuration snapshot or update for sensor or gateway device",
    "allOf": [
        {
            "$ref": "envelope.schema.json"
        },
        {
            "type": "object",
            "required": [
                "event",
                "configuration"
            ],
            "properties": {
                "event": {
                    "type": "string",
                    "enum": [
                        "config_snapshot",
                        "config_update",
                        "config_request"
                    ],
                    "description": "Configuration event type: snapshot (current state), update (apply changes), request (query current config)"
                },
                "message_type": {
                    "const": 700,
                    "description": "Message type code for device configuration (v0.7.1+)"
                },
                "configuration": {
                    "type": "object",
                    "description": "Device configuration parameters",
                    "properties": {
                        "sampling_interval_ms": {
                            "type": "integer",
                            "minimum": 1000,
                            "maximum": 86400000,
                            "description": "Sensor sampling interval in milliseconds (1s to 24h)"
                        },
                        "reporting_interval_ms": {
                            "type": "integer",
                            "minimum": 1000,
                            "maximum": 86400000,
                            "description": "Data reporting interval in milliseconds"
                        },
                        "sensors_enabled": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "List of enabled sensor names"
                        },
                        "transmission_mode": {
                            "type": "string",
                            "enum": [
                                "wifi",
                                "mesh",
                                "mixed",
                                "cellular"
                            ],
                            "description": "Network transmission mode"
                        },
                        "power_mode": {
                            "type": "string",
                            "enum": [
                                "normal",
                                "low_power",
                                "ultra_low_power",
                                "always_on"
                            ],
                            "description": "Device power management mode"
                        },
                        "sleep_duration_ms": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Deep sleep duration in milliseconds (0 = disabled)"
                        },
                        "calibration_offsets": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "number"
                            },
                            "description": "Sensor calibration offset values"
                        },
                        "alert_thresholds": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "min": {
                                        "type": "number"
                                    },
                                    "max": {
                                        "type": "number"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    }
                                }
                            },
                            "description": "Alert threshold configurations per sensor"
                        },
                        "network_config": {
                            "type": "object",
                            "properties": {
                                "wifi_ssid": {
                                    "type": "string",
                                    "maxLength": 32
                                },
                                "wifi_channel": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 14
                                },
                                "mesh_prefix": {
                                    "type": "string",
                                    "maxLength": 32
                                },
                                "mesh_password": {
                                    "type": "string",
                                    "maxLength": 64
                                },
                                "mesh_port": {
                                    "type": "integer",
                                    "minimum": 1024,
                                    "maximum": 65535
                                },
                                "mqtt_broker": {
                                    "type": "string",
                                    "format": "hostname"
                                },
                                "mqtt_port": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 65535
                                },
                                "mqtt_topic_prefix": {
                                    "type": "string",
                                    "maxLength": 128
                                }
                            },
                            "description": "Network and connectivity configuration"
                        },
                        "ota_config": {
                            "type": "object",
                            "properties": {
                                "auto_update": {
                                    "type": "boolean",
                                    "description": "Enable automatic OTA updates"
                                },
                                "update_channel": {
                                    "type": "string",
                                    "enum": [
                                        "stable",
                                        "beta",
                                        "dev"
                                    ],
                                    "description": "OTA update channel"
                                },
                                "update_check_interval_h": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 168,
                                    "description": "Update check interval in hours"
                                },
                                "allow_downgrade": {
                                    "type": "boolean",
                                    "description": "Allow firmware downgrade"
                                }
                            },
                            "description": "OTA update configuration"
                        },
                        "log_level": {
                            "type": "string",
                            "enum": [
                                "debug",
                                "info",
                                "warn",
                                "error",
                                "none"
                            ],
                            "description": "Device logging level"
                        },
                        "timezone": {
                            "type": "string",
                            "description": "Timezone identifier (e.g., 'America/New_York', 'UTC')"
                        },
                        "ntp_server": {
                            "type": "string",
                            "format": "hostname",
                            "description": "NTP server for time synchronization"
                        }
                    },
                    "additionalProperties": true
                },
                "config_version": {
                    "type": "string",
                    "description": "Configuration schema version for tracking changes"
                },
                "last_modified": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when configuration was last modified"
                },
                "modified_by": {
                    "type": "string",
                    "description": "User or system that modified the configuration"
                },
                "validation_errors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "field": {
                                "type": "string"
                            },
                            "error": {
                                "type": "string"
                            }
                        }
                    },
                    "description": "Configuration validation errors (for config_update responses)"
                }
            },
            "additionalProperties": true
        }
    ]
};
export const mqtt_v1_bundle_json = {
    "$comment": "Convenience bundle referencing all v1 schema artifact filenames for tooling discovery.",
    "version": 1,
    "schemas": {
        "envelope": "envelope.schema.json",
        "sensor_data": "sensor_data.schema.json",
        "sensor_heartbeat": "sensor_heartbeat.schema.json",
        "sensor_status": "sensor_status.schema.json",
        "gateway_info": "gateway_info.schema.json",
        "gateway_metrics": "gateway_metrics.schema.json",
        "firmware_status": "firmware_status.schema.json",
        "control_response": "control_response.schema.json",
        "command": "command.schema.json",
        "command_response": "command_response.schema.json",
        "mesh_node_list": "mesh_node_list.schema.json",
        "mesh_topology": "mesh_topology.schema.json",
        "mesh_alert": "mesh_alert.schema.json"
    }
};
export const ota_ota_manifest_schema = {
    "$id": "https://schemas.alteriom.com/ota/ota-manifest.schema.json",
    "title": "Alteriom OTA Firmware Manifest",
    "description": "Schema for Alteriom OTA firmware manifests supporting both rich and minimal variants",
    "type": "object",
    "oneOf": [
        {
            "title": "Rich Manifest",
            "description": "Rich manifest format with environment, branch, and manifests object",
            "type": "object",
            "properties": {
                "environment": {
                    "type": "string",
                    "description": "Target environment (e.g., universal-sensor)"
                },
                "branch": {
                    "type": "string",
                    "description": "Source control branch the build originated from"
                },
                "manifests": {
                    "type": "object",
                    "description": "Build variants keyed by type (dev, prod, etc.)",
                    "patternProperties": {
                        "^[a-z][a-z0-9-]*$": {
                            "$ref": "#/$defs/richEntry"
                        }
                    },
                    "additionalProperties": false,
                    "minProperties": 1
                }
            },
            "required": [
                "environment",
                "branch",
                "manifests"
            ],
            "additionalProperties": true
        },
        {
            "title": "Minimal Environment Map",
            "description": "Minimal manifest format as environment -> channels mapping",
            "type": "object",
            "patternProperties": {
                "^[a-z][a-z0-9-]*$": {
                    "type": "object",
                    "description": "Environment entry with channel mappings",
                    "patternProperties": {
                        "^[a-z][a-z0-9-]*$": {
                            "$ref": "#/$defs/minimalChannel"
                        }
                    },
                    "additionalProperties": false,
                    "minProperties": 1
                }
            },
            "additionalProperties": false,
            "minProperties": 1
        }
    ],
    "$defs": {
        "richEntry": {
            "title": "Rich Build Entry",
            "description": "Rich manifest build entry (dev or prod)",
            "type": "object",
            "properties": {
                "build_type": {
                    "type": "string",
                    "enum": [
                        "dev",
                        "prod"
                    ],
                    "description": "Build type identifier"
                },
                "file": {
                    "type": "string",
                    "description": "Firmware binary filename"
                },
                "size": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Total firmware size in bytes"
                },
                "sha256": {
                    "type": "string",
                    "pattern": "^[a-f0-9]{64}$",
                    "description": "SHA256 hash of the full firmware binary (lowercase hex)"
                },
                "firmware_version": {
                    "type": "string",
                    "description": "Semantic or build version string"
                },
                "built": {
                    "type": "string",
                    "format": "date-time",
                    "description": "ISO8601 timestamp when built"
                },
                "ota_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "Absolute or relative URL to fetch the firmware"
                },
                "chunk_size": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Size of each chunk except possibly the last"
                },
                "chunks": {
                    "description": "Either structured chunk objects or array of SHA256 strings",
                    "oneOf": [
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/chunkObject"
                            },
                            "description": "Array of structured chunk objects with metadata"
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "^[a-f0-9]{64}$",
                                "description": "SHA256 hash of chunk (lowercase hex)"
                            },
                            "description": "Array of SHA256 strings for chunks"
                        }
                    ]
                },
                "signature": {
                    "type": "string",
                    "description": "Digital signature of the firmware for authenticity verification (base64 encoded)"
                },
                "signature_algorithm": {
                    "type": "string",
                    "enum": [
                        "RSA-SHA256",
                        "ECDSA-SHA256",
                        "Ed25519"
                    ],
                    "description": "Algorithm used for digital signature"
                },
                "signing_key_id": {
                    "type": "string",
                    "description": "Identifier of the signing key for key rotation support"
                },
                "release_notes_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL to release notes or changelog for this version"
                },
                "min_version": {
                    "type": "string",
                    "description": "Minimum firmware version required to upgrade to this version"
                },
                "max_version": {
                    "type": "string",
                    "description": "Maximum firmware version that can upgrade to this version (for preventing downgrades)"
                },
                "criticality": {
                    "type": "string",
                    "enum": [
                        "low",
                        "medium",
                        "high",
                        "critical"
                    ],
                    "description": "Update criticality level for prioritization"
                },
                "mandatory": {
                    "type": "boolean",
                    "description": "Whether this update must be installed (cannot be skipped)"
                },
                "rollout_percentage": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "description": "Percentage of fleet to receive this update (staged rollout)"
                },
                "rollout_target_groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specific device groups targeted for this update (A/B testing)"
                },
                "delta_from_version": {
                    "type": "string",
                    "description": "Source version for delta/patch update"
                },
                "delta_patch_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL to download delta patch instead of full firmware"
                },
                "delta_patch_size": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Size of delta patch in bytes"
                },
                "delta_patch_sha256": {
                    "type": "string",
                    "pattern": "^[a-f0-9]{64}$",
                    "description": "SHA256 hash of the delta patch file"
                },
                "deprecated": {
                    "type": "boolean",
                    "description": "Mark this version as deprecated (not recommended for new installs)"
                },
                "expiry_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "ISO8601 timestamp when this firmware version expires and should no longer be installed"
                }
            },
            "required": [
                "build_type",
                "file",
                "size",
                "sha256",
                "firmware_version",
                "built",
                "ota_url"
            ],
            "additionalProperties": true
        },
        "chunkObject": {
            "title": "OTA Chunk Object",
            "description": "Structured chunk metadata with offset and size",
            "type": "object",
            "properties": {
                "index": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "0-based sequential chunk index"
                },
                "offset": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Byte offset within firmware binary"
                },
                "size": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Chunk size in bytes"
                },
                "sha256": {
                    "type": "string",
                    "pattern": "^[a-f0-9]{64}$",
                    "description": "SHA256 hash of the chunk (lowercase hex)"
                }
            },
            "required": [
                "index",
                "offset",
                "size",
                "sha256"
            ],
            "additionalProperties": true
        },
        "minimalChannel": {
            "title": "Minimal Channel Entry",
            "description": "Minimal manifest channel entry",
            "type": "object",
            "properties": {
                "file": {
                    "type": "string",
                    "description": "Firmware binary filename"
                },
                "size": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Total firmware size in bytes"
                },
                "sha256": {
                    "type": "string",
                    "pattern": "^[a-f0-9]{64}$",
                    "description": "SHA256 hash of the firmware binary (lowercase hex)"
                },
                "version": {
                    "type": "string",
                    "description": "Firmware version string"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "ISO8601 timestamp"
                },
                "signature": {
                    "type": "string",
                    "description": "Digital signature of the firmware (base64 encoded)"
                },
                "signature_algorithm": {
                    "type": "string",
                    "enum": [
                        "RSA-SHA256",
                        "ECDSA-SHA256",
                        "Ed25519"
                    ],
                    "description": "Algorithm used for digital signature"
                },
                "min_version": {
                    "type": "string",
                    "description": "Minimum firmware version required to upgrade"
                },
                "criticality": {
                    "type": "string",
                    "enum": [
                        "low",
                        "medium",
                        "high",
                        "critical"
                    ],
                    "description": "Update criticality level"
                },
                "mandatory": {
                    "type": "boolean",
                    "description": "Whether this update must be installed"
                }
            },
            "required": [
                "file",
                "size",
                "sha256",
                "version",
                "timestamp"
            ],
            "additionalProperties": true
        }
    }
};
